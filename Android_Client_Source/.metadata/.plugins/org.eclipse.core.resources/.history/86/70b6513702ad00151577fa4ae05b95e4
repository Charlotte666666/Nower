package com.project.enjoyit.adapter;

import java.util.ArrayList;

import me.drakeet.materialdialog.MaterialDialog;

import com.project.enjoyit.R;
import com.project.enjoyit.entity.Comment;

import android.content.Context;
import android.text.NoCopySpan.Concrete;
import android.text.SpannableStringBuilder;
import android.text.TextPaint;
import android.text.method.LinkMovementMethod;
import android.text.style.ClickableSpan;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.inputmethod.InputMethodManager;
import android.widget.BaseAdapter;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

public class MyCommentsListViewAdapter extends BaseAdapter {
	private static final String TAG = "MyCommentsListViewAdapter";

	private ArrayList<Comment> comments;
	private Context context;
	private String username;

	public MyCommentsListViewAdapter(Context context,
			ArrayList<Comment> comments, String username) {
		this.comments = comments;
		this.context = context;
		this.username = username;
	}

	@Override
	public int getCount() {
		return comments.size();
	}

	@Override
	public Object getItem(int arg0) {
		return comments.get(arg0);
	}

	@Override
	public long getItemId(int arg0) {
		return arg0;
	}

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		ViewHolder viewHolder = null;
		if (convertView == null) {
			convertView = LayoutInflater.from(context).inflate(
					R.layout.comment_list_item, parent, false);
			viewHolder = new ViewHolder();
			viewHolder.tvText = (TextView) convertView
					.findViewById(R.id.tv_text);
			convertView.setTag(viewHolder);
		} else {
			viewHolder = (ViewHolder) convertView.getTag();
		}
		viewHolder.tvText.setMovementMethod(LinkMovementMethod.getInstance());
		viewHolder.tvText.setText(addClickablePart(comments.get(position)));
		
		final String text = viewHolder.tvText.getText().toString();
		
		Log.e(TAG, "0 " + comments.size());

		viewHolder.tvText.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				// Toast.makeText(context, "fsfsfsf",
				// Toast.LENGTH_SHORT).show();
				final MaterialDialog dialog = new MaterialDialog(context);
				View view = LayoutInflater.from(context).inflate(
						R.layout.comment_dialog, null);
				TextView tv_text = (TextView)view.findViewById(R.id.tv_text);
				tv_text.setText(text);
				final EditText et_content = (EditText)view.findViewById(R.id.et_content);
				dialog.setPositiveButton("确定", new OnClickListener() {
					@Override
					public void onClick(View arg0) {
						String content = et_content.getText().toString().trim();
						if (content.isEmpty()){
							Toast.makeText(context, "不能空哦", Toast.LENGTH_SHORT).show();
							return;
						}
						//((InputMethodManager)getSystemService(INPUT_METHOD_SERVICE)).toggleSoftInput(0,InputMethodManager.HIDE_NOT_ALWAYS);
						et_content.requestFocus();
						//et_content.requestFocusFromTouch();
						et_content.setFocusable(true);
						et_content.setFocusableInTouchMode(true);
						InputMethodManager inputManager =  
					               (InputMethodManager)et_content.getContext().getSystemService(Context.INPUT_METHOD_SERVICE);  
						
						
					}
				}).setNegativeButton("取消", new OnClickListener() {
					@Override
					public void onClick(View arg0) {
						dialog.dismiss();
					}
				});
				dialog.setView(view).show();
			}
		});

		return convertView;
	}

	public final class ViewHolder {
		public TextView tvText;
	}

	private SpannableStringBuilder addClickablePart(Comment comment) {
		SpannableStringBuilder ssb = new SpannableStringBuilder();
		String comment_user = comment.getComment_user();
		String commented_user = comment.getCommented_user();

		int start = 0;
		int end = 0;

		if (comment.getIs_anonymous() == 1) {
			String str = "匿名者";
			ssb.append(str);
			start += str.length();
		} else {
			MyClickableSpan clickableSpan1 = new MyClickableSpan(comment_user);
			ssb.append(comment_user);
			end = start + comment_user.length();
			ssb.setSpan(clickableSpan1, start, end, 0);
			start = end;
		}
		String str = "回复";
		ssb.append(str);
		start += str.length();

		if (!commented_user.equals(username)) {
			MyClickableSpan clickableSpan2 = new MyClickableSpan(commented_user);
			ssb.append(commented_user);
			end = start + commented_user.length();
			ssb.setSpan(clickableSpan2, start, end, 0);
		}

		ssb.append("：" + comment.getContent());
		return ssb;
	}

	class MyClickableSpan extends ClickableSpan {
		private String text;

		public MyClickableSpan(String text) {
			this.text = text;
		}

		@Override
		public void onClick(View arg0) {
			Toast.makeText(context, "点击了" + text, Toast.LENGTH_SHORT).show();

		}

		@Override
		public void updateDrawState(TextPaint ds) {
			super.updateDrawState(ds);
			// ds.setColor(Color.RED); // 设置文本颜色
			// 去掉下划线
			ds.setUnderlineText(false);
		}
	}
}
